(1)socket 发展过程 (套接字)
# 在没有网络的情况下 一台机器文件之间想要进行传输数据要通过第三个临时文件进行传输
a.py 与 b.py 两者之间的通讯要经过c.py这么个临时文件进行数据的缓存

# 有网络之后,通过套接字socket 经过网线收发数据

192.168.10.12
11000000  10101000 00001010 00001100

# (1)子网掩码
255.255.255.0
11111111 11111111 11111111 00000000

# 一假则假 , 全真则真 and True => 1 False => 0
# 一真则真 , 全假则假 or  True => 1 False => 0
左边匹配洗了 and  右边屁股也洗了  真洗了
True and True  True

11000000  10101000 00001010 00001100
11111111  11111111 11111111 00000000
11000000  10101000 00001010 00000000 => 求得的网段值 192.168.10.0




192.168.1.16
11000000.10101000.00000001.00010000


11000000.10101000.00000001.00010000
11111111.11111111.11111111.00000000
11000000.10101000.00000001.00000000 => 求得的网段值 192.168.1.0
192.168.10.0 和 192.168.1.0 不一样,所以这两个ip不在一个网段


# (2)子网掩码
255.255.0.0
11111111 11111111 00000000 00000000


11000000 10101000 00001010 00001100
11111111 11111111 00000000 00000000
11000000 10101000 00000000 00000000 => 192.168.0.0


11000000.10101000.00000001.00010000
11111111 11111111 00000000 00000000
11000000.10101000.00000000.00000000 => 192.168.0.0
192.168.10.0 和 192.168.1.0 一样,所以这两个ip在一个网段,可以实现通讯.

常用端口:
21 ftp 	文件传输协议（FTP）端口；有时被文件服务协议（FSP）使用
22 ssh 	安全 Shell（SSH）服务
23 	telnet 	Telnet 服务
25 	smtp 	简单邮件传输协议（SMTP）
80 http 用于万维网（WWW）服务的超文本传输协议（HTTP）
3306 数据库的端口
这些常用端口不能在使用,一般自定义端口在8000以上,端口范围在0~65535这个范围之内


arp 协议: 一般用来通过ip找mac地址.
	在不知道对方mac的情况下,
	先发送arp请求包,在mac目标地址上,标上全FF广播地址
	交换机接收到arp请求包之后,拆两层,到mac这块发现是全F广播地址,
	那么交换机开始广播,每一台连接在该交换机的主机都收到广播包开始拆包,
	意图在于询问谁是该ip的那台主机,把mac地址给我返回.
	每台主机发现不是自己的ip舍掉,路由器也接收到这个包
	路由器拆分三层,拆到网络层,打开路由表信息开始比对.
	这个表是接口和光端之间的对应关系
	路由器找到之后,交给eth1这个接口
	这个接口在交给他对应的交换机,
	对面这个交换机收到数据包后,开始拆包2层,发现是全广播地址,然后在局域网内广播
	意图寻找ip是该主机的那个mac是多少
	这个时候有一个主机从下往上拆包,发现当前要寻找的ip就是自己
	这个时候该主机发送arp回应包,把ip和mac地址的对应信息塞在数据包开始发送
	原路返回,原主机接收到ip和mac的对照表,更新自己的arp缓存表.
	重新对要发送的数据进行打包,把mac地址缺失的部分赛到数据包中,重新发送,
	这样的化,对面就可以收到该数据包了
	这个过程就是arp协议; 通过一次广播在进行一次单播找到最后的mac
	
	
	






















